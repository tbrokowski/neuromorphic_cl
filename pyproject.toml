[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neuromorphic-continual-learning"
version = "0.1.0"
description = "Neuromorphic Continual Learning System with Concept-Level Memory"
authors = [
    {name = "Research Team", email = "research@company.com"}
]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = [
    "neuromorphic",
    "continual-learning", 
    "spiking-neural-networks",
    "multimodal",
    "medical-ai"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core ML/DL
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "pytorch-lightning>=2.0.0",
    "transformers>=4.30.0",
    "datasets>=2.14.0",
    
    # Neuromorphic/SNN
    "spikingjelly>=0.0.0.0.14",
    "norse>=1.0.0",
    
    # Vector Search & Memory
    "faiss-cpu>=1.7.4",
    "hnswlib>=0.7.0",
    
    # Computer Vision & OCR
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "pdf2image>=1.16.0",
    "pytesseract>=0.3.10",
    
    # Scientific Computing
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    
    # Configuration & Logging
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "wandb>=0.15.0",
    "tensorboard>=2.13.0",
    
    # Data & I/O
    "h5py>=3.9.0",
    "zarr>=2.16.0",
    "pyarrow>=12.0.0",
    
    # Validation & Testing
    "pydantic>=2.0.0",
    "pytest>=7.4.0",
    "pytest-xdist>=3.3.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "rich>=13.4.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.3.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.24.0",
]

gpu = [
    "faiss-gpu>=1.7.4",
]

deepseek = [
    # Placeholder for DeepSeek-OCR when available
    "deepseek-ocr",
]

[project.scripts]
neuromorphic-train = "neuromorphic_cl.cli.train:main"
neuromorphic-eval = "neuromorphic_cl.cli.evaluate:main"
neuromorphic-infer = "neuromorphic_cl.cli.inference:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "spikingjelly.*",
    "norse.*",
    "faiss.*",
    "hnswlib.*",
    "cv2.*",
    "pdf2image.*",
    "pytesseract.*",
]
ignore_missing_imports = true
